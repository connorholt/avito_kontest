// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/banner": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "getAllBanners",
                "operationId": "get-all-banners-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "feature_id",
                        "name": "feature_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "tag_id",
                        "name": "tag_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Client Error"
                    },
                    "401": {
                        "description": "You are not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "createBanner",
                "operationId": "create-banner-id",
                "parameters": [
                    {
                        "description": "Data about banner",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/avito_app_internal_models.Banner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Client Error"
                    },
                    "401": {
                        "description": "You are not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/banner/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "summary": "deleteBanner",
                "operationId": "delete-banner-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "banner id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Client Error"
                    },
                    "401": {
                        "description": "You are not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "summary": "patchBanner",
                "operationId": "patch-banner-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "banner id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Data about banner",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/avito_app_internal_models.Banner"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Client Error"
                    },
                    "401": {
                        "description": "You are not authorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/fill_tables": {
            "post": {
                "description": "fill tables features and tags 1000 rows",
                "tags": [
                    "preparing"
                ],
                "summary": "fillTables",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "login existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registration and logging"
                ],
                "summary": "loginUser",
                "parameters": [
                    {
                        "description": "New user info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cmd.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succesfuly logged in",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {}
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "register new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registration and logging"
                ],
                "summary": "registerUser",
                "parameters": [
                    {
                        "description": "New user info",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cmd.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "New user registered",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {}
                    }
                }
            }
        },
        "/user_banner": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "getBanner",
                "operationId": "get-banner-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "feature_id",
                        "name": "feature_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "tag_id",
                        "name": "tag_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Client Error"
                    },
                    "401": {
                        "description": "You are not authorized"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "avito_app_internal_models.Banner": {
            "type": "object",
            "properties": {
                "banner_id": {
                    "type": "integer"
                },
                "content": {
                    "$ref": "#/definitions/avito_app_internal_models.Content"
                },
                "created_at": {
                    "type": "string",
                    "example": "2024-04-14"
                },
                "feature_id": {
                    "type": "integer",
                    "example": 0
                },
                "is_active": {
                    "type": "boolean",
                    "example": true
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        0
                    ]
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-04-14"
                }
            }
        },
        "avito_app_internal_models.Content": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "example": "some_text"
                },
                "title": {
                    "type": "string",
                    "example": "some_title"
                },
                "url": {
                    "type": "string",
                    "example": "some_url"
                }
            }
        },
        "cmd.LoginRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "example": "123"
                }
            }
        },
        "cmd.RegisterRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "John"
                },
                "password": {
                    "type": "string",
                    "example": "123"
                },
                "role": {
                    "type": "string",
                    "example": "admin"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5000",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "avito_app",
	Description:      "My Application",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
